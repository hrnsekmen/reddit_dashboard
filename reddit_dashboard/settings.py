"""
Django settings for reddit_dashboard project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import environ
import os
import logging

logging.Logger(name="reddit_dashboard")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'api',
    'reddit_dashboard',
    'django_celery_results'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reddit_dashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend', 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



WSGI_APPLICATION = 'reddit_dashboard.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


DATABASE_ENGINE = {
    "MYSQL": {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': env("DB_NAME"),
            "HOST": env("DB_HOST"),
            "USER": env("DB_USER"),
            "PASSWORD": env("DB_PASSWORD")
        }
    },
    "SQLITE": {
        "default": {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'dashboard.db'
        }
    }
}


DATABASES = DATABASE_ENGINE["SQLITE"]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'api.serializers.StandardResultsSetPagination'
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'reddit_dashboard.DashboardUser'


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontend', 'build'),
    os.path.join(BASE_DIR, 'frontend', 'build', 'static')
]


# PRAW CONFIGURATION
PRAW_CLIENT_ID = env("PRAW_CLIENT_ID")
PRAW_SECRET = env("PRAW_SECRET")
PRAW_USER_AGENT = env("PRAW_USER_AGENT")
PRAW_REDIRECT_URL = "http://localhost:8000/reddit_redict_url"

# USER LOGIN INFORMATION 
USERNAME = env("LOGIN_USERNAME")
PASSWORD = env("LOGIN_PASSWORD")

# REDIS CONNECTIONS

REDIS_HOST = "redis"
REDIS_PORT = 6379
REDIS_DATABASE = 0

# Celery Settings

CELERY_BROKER_URL = f'redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DATABASE}'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'default'

# MAIL SETTINGS

SEND_MAILS = True  # As celery report
EMAIL_HOST = env("HOST", default=None)
EMAIL_PORT = env("PORT", default=None)
EMAIL_HOST_USER = env("EMAIL_ADDRESS", default=None)
EMAIL_HOST_PASSWORD = env("EMAIL_PASSWORD", default=None)


# DISCORD SETTINGS

DISCORD_CLIENT_ID = env("DISCORD_CLIENT_ID")
DISCORD_BOT_TOKEN = env("DISCORD_TOKEN")
DISCORD_REDIRECT_URL = env("DISCORD_REDIRECT_ID", default="http://localhost:8000/discord_redirect")



